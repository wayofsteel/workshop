--[[ MrStump's Universal Counter Tokens (edited by EV)
--]]
function onSave()
    return JSON.encode({saved_count = count})
end

function onLoad(saved_data)
    count = JSON.decode(saved_data).saved_count or 10

    button_list = {
        [0] = { width = 300, position = {x=0.0, y=0.1, z=-1.5} },
        ['increase'] = { label =  '+', position = {x=0.4, y=0.1, z=-1.5} },
        ['decrease'] = { label =  '-', position = {x=-0.4, y=0.1, z=-1.5} }
    }

    for index, button_table in pairs(button_list)
    do
        -- A stupid hack: here, TTS ignores Lua indexing at 1
        if index == 0 then index = 'customSet' end

        curr_button = { function_owner = self, width = 150, height = 300 }
        curr_button.click_function = index

        for attribute, value in pairs(button_table)
        do
            curr_button[attribute] = value
        end

        self.createButton(curr_button)
    end

    updateDisplay()
end

--Activates when + is hit. Adds 1 to 'count' then updates the display button.
function increase()
    count = count + 1
    updateDisplay()
end

--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.
function decrease()
    --Prevents count from going below 0
    --   count = count - 1 if count < 0 then count = 0 end
    if count > 0 then
        count = count - 1
        updateDisplay()
    end
end

function customSet()
    local description = self.getDescription()
    if description != '' and type(tonumber(description)) == 'number' then
        self.setDescription('')
        count = tonumber(description)
        updateDisplay()
    end
end

--function that updates the display. I trigger it whenever I change 'count'
function updateDisplay()
    --If statement to resize font size if it gets too long
    if count >= 100 then
        b_display.font_size = 180
    else
        b_display.font_size = 250
    end
    b_display.label = tostring(count)
    self.editButton(b_display)
end
