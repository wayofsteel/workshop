--[[ MrStump's Universal Counter Tokens (edited by EV)
--]]
function onSave()
    return JSON.encode({saved_count = count})
end

function onLoad(saved_data)

    count = 10 --Default value, 10, can be overridden by saved_data

    local loaded_data = JSON.decode(saved_data)
    if loaded_data ~= '' then
        count = loaded_data.saved_count
    end

    b_display = {
        click_function = 'customSet', function_owner = self,
        position = {0,0.1,-1.5}, width = 300, height = 300
    }
    b_plus = {
        click_function = 'increase', function_owner = self, label =  '+',
        position = {0.4,0.1,-1.5}, width = 150, height = 300
    }
    b_minus = {
        click_function = 'decrease', function_owner = self, label =  '-',
        position = {-0.4,0.1,-1.5}, width = 150, height = 300
    }

    self.createButton(b_display)
    self.createButton(b_plus)
    self.createButton(b_minus)

    updateDisplay()
end

--Activates when + is hit. Adds 1 to 'count' then updates the display button.
function increase()
    count = count + 1
    updateDisplay()
end

--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.
function decrease()
    --Prevents count from going below 0
    if count > 0 then
        count = count - 1
        updateDisplay()
    end
end

function customSet()
    local description = self.getDescription()
    if description != '' and type(tonumber(description)) == 'number' then
        self.setDescription('')
        count = tonumber(description)
        updateDisplay()
    end
end

--function that updates the display. I trigger it whenever I change 'count'
function updateDisplay()
    --If statement to resize font size if it gets too long
    if count >= 100 then
        b_display.font_size = 180
    else
        b_display.font_size = 250
    end
    b_display.label = tostring(count)
    self.editButton(b_display)
end
